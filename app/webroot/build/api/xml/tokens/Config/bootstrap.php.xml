<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="C:/wamp/www/calendar/app/Config" file="bootstrap.php" realpath="C:/wamp/www/calendar/app/Config/bootstrap.php" size="5309" time="2014-12-09T15:53:08+01:00" unixtime="1418136788" sha1="de528d077ef5c8fe31aead6d1d116ce6a4fa4782" relative="Config/bootstrap.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * This file is loaded automatically by the app/webroot/index.php file after core.php</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * This file should load/create any application wide configuration settings, such as</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * Caching, Logging, loading additional configuration files.</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * You should also use this file to include any files that provide global functions/constants</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * that your application uses.</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * Licensed under The MIT License</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * For full copyright and license information, please see the LICENSE.txt</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * Redistributions of files must retain the above copyright notice.</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * @link          http://cakephp.org CakePHP(tm) Project</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * @package       app.Config</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> * @since         CakePHP(tm) v 0.10.8.2117</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> * @license       http://www.opensource.org/licenses/mit-license.php MIT License</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="24"/>
  <line no="25">
    <token name="T_COMMENT">// Setup a 'default' cache configuration for use in the application.</token>
  </line>
  <line no="26">
    <token name="T_STRING">Cache</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'engine'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'File'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27"/>
  <line no="28">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT"> * The settings below can be used to set additional paths to models, views and controllers.</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT"> * App::build(array(</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT"> *     'Model'                     =&gt; array('/path/to/models/', '/next/path/to/models/'),</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT"> *     'Model/Behavior'            =&gt; array('/path/to/behaviors/', '/next/path/to/behaviors/'),</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT"> *     'Model/Datasource'          =&gt; array('/path/to/datasources/', '/next/path/to/datasources/'),</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT"> *     'Model/Datasource/Database' =&gt; array('/path/to/databases/', '/next/path/to/database/'),</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT"> *     'Model/Datasource/Session'  =&gt; array('/path/to/sessions/', '/next/path/to/sessions/'),</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT"> *     'Controller'                =&gt; array('/path/to/controllers/', '/next/path/to/controllers/'),</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT"> *     'Controller/Component'      =&gt; array('/path/to/components/', '/next/path/to/components/'),</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT"> *     'Controller/Component/Auth' =&gt; array('/path/to/auths/', '/next/path/to/auths/'),</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT"> *     'Controller/Component/Acl'  =&gt; array('/path/to/acls/', '/next/path/to/acls/'),</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT"> *     'View'                      =&gt; array('/path/to/views/', '/next/path/to/views/'),</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT"> *     'View/Helper'               =&gt; array('/path/to/helpers/', '/next/path/to/helpers/'),</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT"> *     'Console'                   =&gt; array('/path/to/consoles/', '/next/path/to/consoles/'),</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT"> *     'Console/Command'           =&gt; array('/path/to/commands/', '/next/path/to/commands/'),</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT"> *     'Console/Command/Task'      =&gt; array('/path/to/tasks/', '/next/path/to/tasks/'),</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT"> *     'Lib'                       =&gt; array('/path/to/libs/', '/next/path/to/libs/'),</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT"> *     'Locale'                    =&gt; array('/path/to/locales/', '/next/path/to/locales/'),</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT"> *     'Vendor'                    =&gt; array('/path/to/vendors/', '/next/path/to/vendors/'),</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT"> *     'Plugin'                    =&gt; array('/path/to/plugins/', '/next/path/to/plugins/'),</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT"> * ));</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="53"/>
  <line no="54">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT"> * Custom Inflector rules can be set to correctly pluralize or singularize table, model, controller names or whatever other</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT"> * string is passed to the inflection functions</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT"> * Inflector::rules('singular', array('rules' =&gt; array(), 'irregular' =&gt; array(), 'uninflected' =&gt; array()));</token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT"> * Inflector::rules('plural', array('rules' =&gt; array(), 'irregular' =&gt; array(), 'uninflected' =&gt; array()));</token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="62"/>
  <line no="63">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT"> * Plugins need to be loaded manually, you can either load them one by one or all of them in a single call</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT"> * Uncomment one of the lines below, as you need. Make sure you read the documentation on CakePlugin to use more</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT"> * advanced ways of loading plugins</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT"> * CakePlugin::loadAll(); // Loads all plugins at once</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT"> * CakePlugin::load('DebugKit'); //Loads a single plugin named DebugKit</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="72"/>
  <line no="73">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT"> * You can attach event listeners to the request lifecycle as Dispatcher Filter. By default CakePHP bundles two filters:</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT"> * - AssetDispatcher filter will serve your asset files (css, images, js, etc) from your themes and plugins</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT"> * - CacheDispatcher filter will read the Cache.check configure variable and try to serve cached content generated from controllers</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT"> * Feel free to remove or add filters as you see fit for your application. A few examples:</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT"> * Configure::write('Dispatcher.filters', array(</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT"> *		'MyCacheFilter', //  will use MyCacheFilter class from the Routing/Filter package in your app.</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT"> *		'MyCacheFilter' =&gt; array('prefix' =&gt; 'my_cache_'), //  will use MyCacheFilter class from the Routing/Filter package in your app with settings array.</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT"> *		'MyPlugin.MyFilter', // will use MyFilter class from the Routing/Filter package in MyPlugin plugin.</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT"> *		array('callable' =&gt; $aFunction, 'on' =&gt; 'before', 'priority' =&gt; 9), // A valid PHP callback type to be called on beforeDispatch</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT"> *		array('callable' =&gt; $anotherMethod, 'on' =&gt; 'after'), // A valid PHP callback type to be called on afterDispatch</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT"> * ));</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="90">
    <token name="T_STRING">Configure</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">write</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Dispatcher.filters'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'AssetDispatcher'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CacheDispatcher'</token>
  </line>
  <line no="93">
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="94"/>
  <line no="95">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT"> * Configures default file logging options</token>
  </line>
  <line no="97">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="98">
    <token name="T_STRING">App</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">uses</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CakeLog'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Log'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_STRING">CakeLog</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'debug'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'engine'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'File'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'types'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'notice'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'info'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'debug'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'debug'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="103">
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="104">
    <token name="T_STRING">CakeLog</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'engine'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'File'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'types'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warning'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'critical'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'alert'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'emergency'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="108">
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="109"/>
</source>
